# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Elixir CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read


jobs:
  build:

    name: Build and test
    runs-on: ubuntu-22.04
    env:
          POSTGRES_USR: ${{ secrets.PHX_DBUSER }}
          POSTGRES_PASSWD: ${{ secrets.PHX_DBPASSWORD }}
          POSTGRES_HOSTNAME: localhost
          POSTGRES_DBNAME: ${{ secrets.PHX_DBNAME }}
          POSTGRES_POOL_SIZE: ${{ secrets.PHX_POOL_SIZE }}

        

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: ${{ secrets.PHX_DBUSER }}
          POSTGRES_PASSWORD: ${{ secrets.PHX_DBPASSWORD }}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432


    steps:
    - uses: actions/checkout@v4
      
    - name: Restore dependencies cache
      uses: actions/cache@v3
      with:
        path: deps
        key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
        restore-keys: ${{ runner.os }}-mix-
   

    - name: Set up Elixir
      uses: erlef/setup-beam@61e01a43a562a89bfc54c7f9a378ff67b03e4a21 # v1.16.0
      with:
        elixir-version: '1.15.2' # [Required] Define the Elixir version
        otp-version: '26.0'      # [Required] Define the Erlang/OTP version

    - name: Install dependencies
      run: mix deps.get
    - name: Prepare database
      run: mix ecto.setup
    
    - name: Run Credo
      run: mix credo 
    - name: Run format
      run: mix format
    - name: Run tests
      run: mix test
